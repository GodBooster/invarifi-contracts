import { loadFixture } from "@nomicfoundation/hardhat-network-helpers";
import { expect } from "chai";
// eslint-disable-next-line node/no-missing-import
import { StrategyRetroGammaDeployment } from "./deployment/StrategyRetroGamma.deployment";
// eslint-disable-next-line node/no-missing-import
import { earnCommonAddresses } from "../../earn/common/Infra.deployment";
// eslint-disable-next-line node/no-missing-import
import { beefIn, beefOut, beefOutAndSwap } from "./utils";
// eslint-disable-next-line node/no-missing-import,camelcase
import { ERC20__factory } from "../../../typechain-types";

describe("StrategyRetroGamma zap tests", async () => {
  it("deployment test", async () => {
    const { zap, weth, stable } = await loadFixture(StrategyRetroGammaDeployment);

    expect(stable.address).eq(earnCommonAddresses.tokens.polygon.LIDO);
    expect(await zap.oneInchRouter()).eq(earnCommonAddresses.ONE_INCH_ROUTER);
    expect(weth.address).eq(earnCommonAddresses.tokens.polygon.WMATIC);
  });

  it("beef in test", async () => {
    const data =
      "0xbc80f1a80000000000000000000000007dd675f6bb90d4857d2bfd19816bac13e22be7a100000000000000000000000000000000000000000000003635c9adc5dea0000000000000000000000000000000000000000000000000005479fae746a70acd2900000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000001800000000000000000000000d866fac7db79994d08c0ca2221fee08935595b4b8b1ccac8";

    const { zap, stable, deployer, vault, weth } = await loadFixture(StrategyRetroGammaDeployment);

    await beefIn(data, stable, deployer, zap, vault, weth, 0);
  });

  it("beef out test", async () => {
    const data =
      "0xbc80f1a80000000000000000000000007dd675f6bb90d4857d2bfd19816bac13e22be7a100000000000000000000000000000000000000000000003635c9adc5dea0000000000000000000000000000000000000000000000000005479fae746a70acd2900000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000001800000000000000000000000d866fac7db79994d08c0ca2221fee08935595b4b8b1ccac8";

    const { zap, stable, deployer, vault, weth } = await loadFixture(StrategyRetroGammaDeployment);

    await beefIn(data, stable, deployer, zap, vault, weth, 0);

    // eslint-disable-next-line camelcase
    const token = ERC20__factory.connect(earnCommonAddresses.tokens.polygon.USDC, deployer);

    await beefOut(vault, deployer, zap, token);
  });

  it("beef out and swap test", async () => {
    const data =
      "0xbc80f1a80000000000000000000000007dd675f6bb90d4857d2bfd19816bac13e22be7a100000000000000000000000000000000000000000000003635c9adc5dea0000000000000000000000000000000000000000000000000005479fae746a70acd2900000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000001800000000000000000000000d866fac7db79994d08c0ca2221fee08935595b4b8b1ccac8";

    const { zap, stable, deployer, vault, weth } = await loadFixture(StrategyRetroGammaDeployment);

    await beefIn(data, stable, deployer, zap, vault, weth, 0);
    // eslint-disable-next-line camelcase
    const token = ERC20__factory.connect(earnCommonAddresses.tokens.polygon.USDC, deployer);

    const data1 =
      "0x12aa3caf000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd090000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf1270000000000000000000000000c3c7d422809852031b44ab29eec9f1eff2a58756000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd09000000000000000000000000610acfd59bef98f34740b780b81d04079ac732d400000000000000000000000000000000000000000000004cf502d8c8680304c500000000000000000000000000000000000000000000000c892bfabbf2bc424b0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000033a00000000000000000000000000000000000000000000000000000000031c00a0c9e75c48000000000000000007030000000000000000000000000000000000000000000000000002ee00017700a007e5c0d20000000000000000000000000000000000000000000000000001530000f05120817eb46d60762442da3d931ff51a30334ca39b740d500b1d8e8ef31e21c99d1db9a6444d3adf127000447dc203820000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf12700000000000000000000000002791bca1f2de4661ed88a30c99a7a9449aa8417400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000009f18013000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd0900000000000000000000000042f527f50f16a103b6ccab48bccca214500c102102a0000000000000000000000000000000000000000000000003c2a092341f844cd5ee63c1e5813d0acd52ee4a9271a0ffe75f9b91049152bac64b2791bca1f2de4661ed88a30c99a7a9449aa841741111111254eeb25477b68fb85ed929f73a96058200a007e5c0d20000000000000000000000000000000000000000000000000001530000f05120817eb46d60762442da3d931ff51a30334ca39b740d500b1d8e8ef31e21c99d1db9a6444d3adf127000447dc203820000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf12700000000000000000000000007ceb23fd6bc0add59e62ac25578270cff1b9f61900000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000292a7d843eca731000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd0900000000000000000000000042f527f50f16a103b6ccab48bccca214500c102102a0000000000000000000000000000000000000000000000008c68b6887d337f575ee63c1e581da908c0bf14ad0b61ea5ebe671ac59b2ce091cbf7ceb23fd6bc0add59e62ac25578270cff1b9f6191111111254eeb25477b68fb85ed929f73a9605820000000000008b1ccac8";

    const data2 =
      "0x12aa3caf000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd090000000000000000000000002791bca1f2de4661ed88a30c99a7a9449aa84174000000000000000000000000c3c7d422809852031b44ab29eec9f1eff2a58756000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd09000000000000000000000000610acfd59bef98f34740b780b81d04079ac732d400000000000000000000000000000000000000000000000000000000564f5c44000000000000000000000000000000000000000000000010383784b0516a468e0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000025100000000000000000000000000000000000000000000000000000000023300a0c9e75c48000000000000000005050000000000000000000000000000000000000000000000000002050001a200a007e5c0d200000000000000000000000000000000000000000000000000017e00011b00a0c9e75c4800000000000000200d050000000000000000000000000000000000000000000000ed00009e00004f02a000000000000000000000000000000000000000000000000280398da0d5321270ee63c1e50067e708986a809acefde16f2417fa5701241e39352791bca1f2de4661ed88a30c99a7a9449aa8417402a00000000000000000000000000000000000000000000000067ffe7e09deb5d836ee63c1e50021988c9cfd08db3b5793c2c6782271dc947492512791bca1f2de4661ed88a30c99a7a9449aa8417402a000000000000000000000000000000000000000000000000fff54d314d36be35dee63c1e500a374094527e1673a86de625aa59517c5de346d322791bca1f2de4661ed88a30c99a7a9449aa8417402a00000000000000000000000000000000000000000000000081ba515c49a7c403bee63c1e581d866fac7db79994d08c0ca2221fee08935595b4b0d500b1d8e8ef31e21c99d1db9a6444d3adf12701111111254eeb25477b68fb85ed929f73a96058202a00000000000000000000000000000000000000000000000081c926eebb6ee0652ee63c1e5813d0acd52ee4a9271a0ffe75f9b91049152bac64b2791bca1f2de4661ed88a30c99a7a9449aa841741111111254eeb25477b68fb85ed929f73a9605820000000000000000000000000000008b1ccac8";

    await beefOutAndSwap(vault, deployer, zap, stable, weth, token, data1, data2);
  });
});
