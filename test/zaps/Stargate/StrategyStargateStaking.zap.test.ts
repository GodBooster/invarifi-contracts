import { loadFixture } from "@nomicfoundation/hardhat-network-helpers";
import { expect } from "chai";
import { avalancheContracts, optimismContracts } from "../../constants";
import { beefIn, beefOut, beefOutAndSwap } from "./utilsOp";
import { StrategyStargateSolidlyOpDeployment } from "./deployment/StrategyStargateSolidlyOp.deployment";
import { runNetworkDescribe } from "../../utils/optional-tests";
import { NetworkName } from "../../../hardhat.config";
import { StrategyStargateStakingDeployment } from "./deployment/StrategyStargateStaking.deployment";

runNetworkDescribe("StrategyStargateStaking zap tests", NetworkName.AVALANCHE, false, async () => {
  it("deployment", async () => {
    const { zap, wavax, stableCoin, strategyStargateSolidly } = await loadFixture(StrategyStargateStakingDeployment);

    console.log("ZAP ADDRESS", zap.address); // 0x7DD675F6BB90d4857d2BFd19816bAC13e22bE7A1

    // console.log(await strategyStargateSolidly.deposit());

    expect(stableCoin.address).eq(avalancheContracts.tokens.USDT.token);
    expect(await zap.oneInchRouter()).eq(avalancheContracts.oneInchRouter);
    expect(wavax.address).eq(avalancheContracts.tokens.WAVAX.token);
  });

  it("beef in test", async () => {
    const { zap, wavax, stableCoin, vault, deployer } = await loadFixture(StrategyStargateStakingDeployment);

    // src - token in, dst - token out, from - my address, slippage - 50, receiver, zap address

    const data =
      "0x12aa3caf0000000000000000000000007ab5194e730c4ec4a9d1d7f1dcad9c173075888a0000000000000000000000009702230a8ea53601f5cd2dc00fdbc13d4df4a8c7000000000000000000000000b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e0000000000000000000000009b2cc8e6a2bbb56d6be4682891a91b0e48633c720000000000000000000000007dd675f6bb90d4857d2bfd19816bac13e22be7a10000000000000000000000000000000000000000000000000000000005f5e1000000000000000000000000000000000000000000000000000000000005e6a67b0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007800000000000000000000000000000000000000000000000000000000005a40219b2cc8e6a2bbb56d6be4682891a91b0e48633c7253c059a000000000000000000000000000000000000000000000000000000000000000010000000000000000000000001111111254eeb25477b68fb85ed929f73a96058200000000000000008b1ccac8";

    await beefIn(data, stableCoin, deployer, zap, vault, wavax);
  });
  it("beef out test", async () => {
    const { zap, wavax, stableCoin, vault, deployer, usdc } = await loadFixture(StrategyStargateStakingDeployment);

    const data =
      "0x12aa3caf0000000000000000000000007ab5194e730c4ec4a9d1d7f1dcad9c173075888a0000000000000000000000009702230a8ea53601f5cd2dc00fdbc13d4df4a8c7000000000000000000000000b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e0000000000000000000000009b2cc8e6a2bbb56d6be4682891a91b0e48633c720000000000000000000000007dd675f6bb90d4857d2bfd19816bac13e22be7a10000000000000000000000000000000000000000000000000000000005f5e1000000000000000000000000000000000000000000000000000000000005e6a67b0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007800000000000000000000000000000000000000000000000000000000005a40219b2cc8e6a2bbb56d6be4682891a91b0e48633c7253c059a000000000000000000000000000000000000000000000000000000000000000010000000000000000000000001111111254eeb25477b68fb85ed929f73a96058200000000000000008b1ccac8";

    await beefIn(data, stableCoin, deployer, zap, vault, wavax);
    await beefOut(usdc, deployer, zap, vault, wavax, false);
  });

  it("beef out and swap test", async () => {
    const { zap, wavax, stableCoin, vault, deployer } = await loadFixture(StrategyStargateStakingDeployment);

    const data =
      "0x12aa3caf0000000000000000000000007ab5194e730c4ec4a9d1d7f1dcad9c173075888a0000000000000000000000009702230a8ea53601f5cd2dc00fdbc13d4df4a8c7000000000000000000000000b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e0000000000000000000000009b2cc8e6a2bbb56d6be4682891a91b0e48633c720000000000000000000000007dd675f6bb90d4857d2bfd19816bac13e22be7a10000000000000000000000000000000000000000000000000000000005f5e1000000000000000000000000000000000000000000000000000000000005e6a67b0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007800000000000000000000000000000000000000000000000000000000005a40219b2cc8e6a2bbb56d6be4682891a91b0e48633c7253c059a000000000000000000000000000000000000000000000000000000000000000010000000000000000000000001111111254eeb25477b68fb85ed929f73a96058200000000000000008b1ccac8";

    await beefIn(data, stableCoin, deployer, zap, vault, wavax);

    // src - lp token from, dst - want token, amount balance of user in vault, from - zap address
    const newData =
      "0x12aa3caf0000000000000000000000007ab5194e730c4ec4a9d1d7f1dcad9c173075888a000000000000000000000000b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e0000000000000000000000009702230a8ea53601f5cd2dc00fdbc13d4df4a8c70000000000000000000000009b2cc8e6a2bbb56d6be4682891a91b0e48633c72000000000000000000000000610acfd59bef98f34740b780b81d04079ac732d40000000000000000000000000000000000000000000000000000000005f4ba300000000000000000000000000000000000000000000000000000000002fa39f70000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007800000000000000000000000000000000000000000000000000000000005a40219b2cc8e6a2bbb56d6be4682891a91b0e48633c7253c059a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111254eeb25477b68fb85ed929f73a96058200000000000000008b1ccac8";

    await beefOutAndSwap(vault, deployer, zap, stableCoin, wavax, newData);
  });
});
